name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # 觸發條件：推送版本標籤 (例如 v1.0.0)
  workflow_dispatch:  # 允許手動觸發

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Get version from tag
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION="1.0.0"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Release version: $VERSION"

    - name: Update plugin.xml version
      run: |
        VERSION=${{ steps.version.outputs.VERSION }}
        sed -i "s/<version>.*<\/version>/<version>$VERSION<\/version>/" src/main/resources/META-INF/plugin.xml
        echo "Updated plugin.xml version to: $VERSION"

    - name: Verify plugin
      run: ./gradlew verifyPlugin -Pversion=${{ steps.version.outputs.VERSION }}

    - name: Build plugin
      run: |
        ./gradlew buildPlugin -Pversion=${{ steps.version.outputs.VERSION }}
        echo "Generated files:"
        ls -la ./build/distributions/

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## CodeIgniter Load Analyzer Plugin ${{ steps.version.outputs.VERSION }}

          ### 功能特色
          - 🚀 一鍵生成 PHPDoc 屬性註解
          - 🔍 智能分析 `$this->load` 調用
          - 🎯 精確映射類別名稱
          - 🔄 自動去重複屬性
          - ✨ 完美整合到 IDE 工作流程

          ### 支援的 IDE
          - IntelliJ IDEA Community/Ultimate 2023.1+
          - PhpStorm 2023.1+
          - WebStorm 2023.1+

          ### 安裝方法
          1. 下載下方的 `ci-load-analyzer-plugin-${{ steps.version.outputs.VERSION }}.zip`
          2. 在 IDE 中：`File` → `Settings` → `Plugins` → `⚙️` → `Install Plugin from Disk...`
          3. 選擇下載的 ZIP 檔案
          4. 重新啟動 IDE

          ### 使用方法
          1. 開啟包含 CodeIgniter `$this->load` 調用的 PHP 檔案
          2. 右鍵點擊 → `Generate CodeIgniter Properties`
          3. 自動生成對應的 `@property` 註解
        draft: false
        prerelease: false
        files: |
          ./build/distributions/*.zip

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: plugin-build-${{ steps.version.outputs.VERSION }}
        path: |
          build/distributions/*.zip
          build/reports/
        retention-days: 30